# Travis CI Java documentation can be found in:
# https://docs.travis-ci.com/user/languages/java/

# We will use Ubuntu 18.04 (bionic beaver). List of options:
# https://docs.travis-ci.com/user/reference/overview/#linux
dist: xenial

services:
# Linking Travis CI and Docker
  - docker

# This enables the 'defaults' to test java applications:
language: java

# We can specify a list of JDKs to be used for testing
# A list of available JDKs in Trusty can be seed in:
# https://docs.travis-ci.com/user/reference/xenial/#jvm-clojure-groovy-java-scala-support
jdk:
- openjdk8

before_install:
- cd backend/KhanaKhazana
- mvn clean
- choco install openjdk11 ant
      # Java is at /c/Program Files/OpenJDK/openjdk-<version-patch>/bin which is liable to change.
      # Chocolatey has updated the PATH with that, but only in powershell [Environment].
      # Dig out the Java path from [Environment] and translate it to Unix.
- java_exe=$(powershell -NonInteractive -Command
    '$env:PATH=[Environment]::GetEnvironmentVariable("PATH","Machine");
        write((Get-Command java).Path)')
- java_exe=$(cygpath "$java_exe")
- echo $java_exe
- export JAVA_HOME="${java_exe%/bin/*}"
- export PATH="$JAVA_HOME/bin:$PATH"
# git strips the wrapper jar file so we have to force its download during the build
install:
- mvn -N io.takari:maven:wrapper
- ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

# Each job in Travis CI has several steps:
# https://docs.travis-ci.com/user/job-lifecycle/
# The 'language: java' directive sets up sane defaults to test common java applications
# We use the defaults for installing dependencies, compiling and testing maven applications
# In our case it will be 'mvn install' followed by 'mvn test'

# https://github.com/codecov/example-java-maven
script: 
- mvn cobertura:cobertura
# This is to enable CodeCov's coverage
# If a build is successful, the code is submitted for coverage analysis
after_success:
  - bash <(curl -s https://codecov.io/bash)
